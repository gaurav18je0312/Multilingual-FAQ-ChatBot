import requests
import base64
import re

class BhashiniAPI:

    def __init__(self, userId, api_key):
        print("Bhashini configuring...")
        self.ttsServiceId = {}
        self.asrServiceId = {}
        self.config_url = "https://meity-auth.ulcacontrib.org/ulca/apis/v0/model/getModelsPipeline"
        self.config_headers = {
            "userID": userId,
            "ulcaApiKey": api_key
        }
        self.pipelineId = "64392f96daac500b55c543cd"
        self.configSetup()
        print("Bhashini configured")
        
    def resultModification(self,input_string):
        pattern = r'\s+([^\w\s])\s+'
        modified_string = re.sub(pattern, r'\1', input_string)
        return modified_string
        
    def configSetup(self):
        body = {
                    "pipelineTasks" : [
                {
                    "taskType" : "asr"
                },
                {
                    "taskType": "translation"
                },
                {  
                    "taskType": "tts"
                }
            ],
            "pipelineRequestConfig": {
                "pipelineId": self.pipelineId
            }
        }
        response = requests.post(url=self.config_url, json=body, headers=self.config_headers)
        print(response)
        data = response.json()
        self.callbackUrl = data["pipelineInferenceAPIEndPoint"]['callbackUrl']
        self.name = data["pipelineInferenceAPIEndPoint"]['inferenceApiKey']['name']
        self.value = data["pipelineInferenceAPIEndPoint"]['inferenceApiKey']['value']
        self.headers = {
            self.name: self.value
        }
        self.serviceIdGenerator(data["pipelineResponseConfig"])
        
    def serviceIdGenerator(self, data):
        asr_config = data[0]["config"]
        tts_config = data[2]["config"]
        
        for config in asr_config:
            self.asrServiceId[config["language"]["sourceLanguage"]] = config["serviceId"]
        
        for config in tts_config:
            self.ttsServiceId[config["language"]["sourceLanguage"]] = config["serviceId"]
            
        print(self.asrServiceId)
        print(self.ttsServiceId)
            
    def audioUrlToBase64(self, url):
        response = requests.get(url)
        
        if response.status_code == 200:
            audio_content = response.content
            base64_audio_content = base64.b64encode(audio_content).decode('utf-8')
            return base64_audio_content
        else:
            print("Failed to fetch audio from the URL:", url)
            return None

    def translatorAPI(self, source_lang, txt, target_lang="en"):
        body = {
            "pipelineTasks": [
                {
                    "taskType": "translation",
                    "config": {
                        "language": {
                            "sourceLanguage": source_lang,
                            "targetLanguage": target_lang
                        },
                        "serviceId": "ai4bharat/indictrans-v2-all-gpu--t4" 
                    }
                }
            ],
            "inputData": {
                "input": [
                    {
                        "source": txt
                    }
                ]
            }
        }
        
        response = requests.post(url=self.callbackUrl, json=body, headers=self.headers)
        print(response.json())
        data = response.json()
        return self.resultModification(data['pipelineResponse'][0]['output'][0]['target'])
    
    def textToSpeechAPI(self, source_lang, txt):
        body = {
            "pipelineTasks": [       
                {
                    "taskType": "tts",
                    "config": {
                        "language": {
                            "sourceLanguage": source_lang
                        },
                        "serviceId": self.ttsServiceId[source_lang],
                        "gender": "female"
                    }
                }
            ],
            "inputData": {
                "input": [
                    {
                        "source": txt
                    }
                ]
            }
        }
        response = requests.post(url=self.callbackUrl, json=body, headers=self.headers)
        data = response.json()
        base64_audio_content = data['pipelineResponse'][0]["audio"][0]["audioContent"]
        return base64_audio_content
    
    def speechToTextAPI(self, source_lang, base64_audio_content):
        print(base64_audio_content)
        if base64_audio_content is not None:
            body = {
                "pipelineTasks": [
                    {
                        "taskType": "asr",
                        "config": {
                            "language": {
                                "sourceLanguage": source_lang
                            },
                            "serviceId": self.asrServiceId[source_lang],
                            "audioFormat": "wav",
                            "samplingRate": 16000
                        }
                    }
                ],
                "inputData": {
                    "audio": [
                        {
                            "audioContent": base64_audio_content
                        }
                    ]
                }
            }
            print(body)
            response = requests.post(url=self.callbackUrl, json=body, headers=self.headers)
            print(response)
            data = response.json()
            print(data)
            return data['pipelineResponse'][0]['output'][0]['source']
        
        else:
            return "We are unable to understand your query. Can you please speak again!"
            


if __name__ == '__main__':
    api = BhashiniAPI()
    api.speechToTextAPI(source_lang="en", base64_audio_content="")
